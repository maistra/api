
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: meshfederations.maistra.io
spec:
  group: maistra.io
  names:
    categories:
    - maistra-io
    kind: MeshFederation
    listKind: MeshFederationList
    plural: meshfederations
    singular: meshfederation
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MeshFederation is the Schema for joining two meshes together.  The resource name will be used to identify the 'cluster' to which imported services belong.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TODO
          properties:
            gateways:
              properties:
                egress:
                  description: Gateway through which outbound federated service traffic will travel. This is not required if AllowDirectOutbound is set to true.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                ingress:
                  description: Gateway through which inbound federated service traffic will travel.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
              type: object
            remote:
              description: Remote configures details related to the remote mesh with which this mesh is federating.
              properties:
                addresses:
                  description: Addresses are the addresses to which discovery and service requests should be sent (i.e. the addresses of ingress gateways on the remote mesh).  These may be specified as resolveable DNS names or IP addresses.
                  items:
                    type: string
                  type: array
                discoveryPort:
                  description: DiscoveryPort is the port on which the addresses are handling discovery requests.  Defaults to 8188, if unspecified.
                  format: int32
                  type: integer
                servicePort:
                  description: ServicePort is the port on which the addresses are handling service requests.  Defaults to 15443, if unspecified.
                  format: int32
                  type: integer
              type: object
            security:
              properties:
                certificateChain:
                  description: Name of ConfigMap containing certificate chain to be used to validate the remote.  This is also used to validate certificates used by the remote services (both client and server certificates).  The name of the entry should be root-cert.pem.  If unspecified, it will look for a ConfigMap named <meshfederation-name>-ca-root-cert, e.g. if this resource is named mesh1, it will look for a ConfigMap named mesh1-ca-root-cert.
                  properties:
                    apiGroup:
                      description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                clientID:
                  description: ClientID of the remote mesh.  This is used to authenticate incoming requrests from the remote mesh's discovery client.
                  type: string
                trustDomain:
                  description: TrustDomain of remote mesh.
                  type: string
              type: object
          type: object
        status:
          description: TODO
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
